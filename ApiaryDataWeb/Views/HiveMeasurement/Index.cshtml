@model IEnumerable<ApiaryDataCollector.Models.HiveMeasurement>

@{
    var apiaries = (IEnumerable<Apiary>)ViewData["Apiaries"];
    var selectedApiaryId = ViewData["SelectedApiaryId"] as int?;
    var hives = (IEnumerable<Hive>)ViewData["Hives"];
    var selectedHives = ViewData["SelectedHives"] as int[] ?? Array.Empty<int>();

    //chart part
    var timeUnit = ViewBag.TimeUnit ?? "minute"; // Defaultní hodnota 'minute'
    var minimum = ViewBag.Minimum ?? 0; // Defaultní hodnota '0'
    var maximum = ViewBag.Maximum ?? 100; // Defaultní hodnota '100'
    var chartData = ViewBag.ChartData ?? "{}";

}

<h1>Hive Measurements</h1>

<!-- Filtr -->
<form method="get" action="/HiveMeasurement/Index">
    <div>
        <label for="apiary">Apiary:</label>
        <select id="apiary" name="apiaryId" onchange="this.form.submit()">
            <option value="">-- Select Apiary --</option>
            @foreach (var apiary in apiaries)
            {
                if (apiary.ApiaryNumber == selectedApiaryId)
                {
                    <option value="@apiary.ApiaryNumber" selected="selected">@apiary.Name</option>
                }
                else
                {
                    <option value="@apiary.ApiaryNumber">@apiary.Name</option>
                }            }
        </select>
    </div>
</form>

    <!-- Checkboxy pro výběr úlů -->
<form method="get" action="/HiveMeasurement/Index">
    <input type="hidden" name="apiaryId" value="@selectedApiaryId" />
    <div>
        <label>Hives to include:</label>
        <div id="hive-checkboxes">
            @if (hives != null && hives.Any())
            {
                @foreach (var hive in hives)
                {
                    <div>
                        <input type="checkbox" id="hive-@hive.HiveNumber" name="selectedHives" value="@hive.HiveNumber"
                        @(selectedHives.Contains(hive.HiveNumber) ? "checked" : "")
                               onchange="this.form.submit()">
                        <label for="hive-@hive.HiveNumber">Hive #@hive.HiveNumber</label>
                    </div>
                }
            }
            else
            {
                <p>Select an apiary to see available hives.</p>
            }
        </div>
    </div>
</form>
<!-- Místo pro graf -->
<div style="width: 800px; height: 600px;">
    <canvas id="timeSeriesChart" width="800" height="400"></canvas>
</div>


<!-- Místo pro graf -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/luxon"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-luxon"></script>
<script>
    // Parse the raw JSON data from the server
    const rawData = @Html.Raw(chartData);

    // Transform raw JSON into datasets for Chart.js
    const datasets = rawData.datasets.map((dataSet) => {
        return {
            label: dataSet.label, // Použij label z dat
            data: dataSet.data.map(d => ({
                x: d.koko,
                y: d.value
            })),
            hidden: dataSet.hidden,
            fill: false,
            borderColor: dataSet.borderColor, // Použij barvu čáry
            tension: 0.1
        };
    });

    const timeUnit = '@timeUnit'; // ViewBag.TimeUnit value
    const minimum = parseFloat('@minimum'); // ViewBag.TimeUnit value
    const maximum = parseFloat('@maximum'); // ViewBag.TimeUnit value


    const config = {
        type: 'line',
        data: {
            datasets: datasets
        },
        options: {
            scales: {
                x: {
                    type: 'time',
                    time: {
                        unit: timeUnit
                    }
                },
                y: {
                    beginAtZero: 'true',
                    min: minimum,
                    max: maximum
                }
            }
        }
    };

    const ctx = document.getElementById('timeSeriesChart').getContext('2d');
    new Chart(ctx, config);
</script>


<!-- 
<table>
    <thead>
        <tr>
            <th>Hive Number</th>
            <th>Date</th>
            <th>Time</th>
            <th>Weight (kg)</th>
            <th>Temperature (°C)</th>
            <th>Humidity (%)</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var measurement in Model)
        {
            <tr>
                <td>Hive #@measurement.HiveNumber</td>
                <td>@measurement.MeasurementDate.ToString("yyyy-MM-dd")</td>
                <td>@measurement.MeasurementDate.ToString("HH:mm")</td>
                <td>@measurement.Weight</td>
                <td>@measurement.Temperature</td>
                <td>@measurement.Humidity</td>
            </tr>
        }
    </tbody>
</table>Tabulka -->
