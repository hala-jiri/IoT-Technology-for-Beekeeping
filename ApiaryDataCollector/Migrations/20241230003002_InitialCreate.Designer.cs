// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiaryDataCollector.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241230003002_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Apiary", b =>
                {
                    b.Property<int>("ApiaryNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApiaryNumber"));

                    b.Property<int?>("Humidity")
                        .HasColumnType("int");

                    b.Property<int?>("LightIntensity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Temperature")
                        .HasColumnType("int");

                    b.HasKey("ApiaryNumber");

                    b.ToTable("Apiaries");
                });

            modelBuilder.Entity("Hive", b =>
                {
                    b.Property<int>("HiveNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HiveNumber"));

                    b.Property<int>("ApiaryNumber")
                        .HasColumnType("int");

                    b.HasKey("HiveNumber");

                    b.HasIndex("ApiaryNumber");

                    b.ToTable("Hives");
                });

            modelBuilder.Entity("SensorData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HiveNumber")
                        .HasColumnType("int");

                    b.Property<int>("HiveNumber1")
                        .HasColumnType("int");

                    b.Property<int>("Humidity")
                        .HasColumnType("int");

                    b.Property<decimal>("Temperature")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("HiveNumber1");

                    b.ToTable("SensorData");
                });

            modelBuilder.Entity("Hive", b =>
                {
                    b.HasOne("Apiary", "Apiary")
                        .WithMany("Hives")
                        .HasForeignKey("ApiaryNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apiary");
                });

            modelBuilder.Entity("SensorData", b =>
                {
                    b.HasOne("Hive", "Hive")
                        .WithMany("SensorData")
                        .HasForeignKey("HiveNumber1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hive");
                });

            modelBuilder.Entity("Apiary", b =>
                {
                    b.Navigation("Hives");
                });

            modelBuilder.Entity("Hive", b =>
                {
                    b.Navigation("SensorData");
                });
#pragma warning restore 612, 618
        }
    }
}
