@model BeeApp.Shared.ViewModels.HiveDetailViewModel

<h2>Hive: @Model.HiveName</h2>
<p><strong>Apiary:</strong> @Model.ApiaryName (@Model.ApiaryLocation)</p> <!-- TODO: make location working -->

<hr />
<h4>📍 Last measurement of apiary:</h4>
<ul>
    <li><strong>Time:</strong> @Model.LastApiaryMeasurementDate?.ToString("g")</li>
    <li><strong>Temperature:</strong> @Model.LastApiaryTemp °C</li>
    <!--<li><strong>Tlak:</strong> @Model.LastApiaryPressure hPa</li> -->
    <li><strong>Light intensity:</strong> @Model.LastApiaryLight lx</li>
</ul>

<h4>📊 Last measurement of hive:</h4>
<ul>
    <li><strong>Time:</strong> @Model.LastHiveMeasurementDate?.ToString("g")</li>
    <li><strong>Weight:</strong> @Model.LastWeight kg</li>
    <li><strong>Temperature:</strong> @Model.LastHiveTemp °C</li>
</ul>



<hr />
<h4>Data Chart</h4>
<canvas id="hiveChart" width="800" height="400"></canvas>

<!-- GENERATED by AI! not my code -->
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const ctx = document.getElementById('hiveChart').getContext('2d');

        const data = {
            labels: @Html.Raw(Json.Serialize(Model.ChartData.Select(d => d.Date.ToString("yyyy-MM-dd HH:mm")))),
            datasets: [
                {
                    label: 'Weight (kg)',
                    data: @Html.Raw(Json.Serialize(Model.ChartData.Select(d => d.Weight))),
                    borderColor: 'blue',
                    yAxisID: 'y'
                },
                {
                    label: 'Temperature (°C)',
                    data: @Html.Raw(Json.Serialize(Model.ChartData.Select(d => d.Temperature))),
                    borderColor: 'red',
                    yAxisID: 'y1'
                }
            ]
        };

        const config = {
            type: 'line',
            data: data,
            options: {
                responsive: true,
                interaction: {
                    mode: 'index',
                    intersect: false
                },
                stacked: false,
                scales: {
                    y: {
                        type: 'linear',
                        display: true,
                        position: 'left',
                        title: {
                            display: true,
                            text: 'Weight (kg)'
                        }
                    },
                    y1: {
                        type: 'linear',
                        display: true,
                        position: 'right',
                        grid: {
                            drawOnChartArea: false
                        },
                        title: {
                            display: true,
                            text: 'Temperature (°C)'
                        }
                    }
                }
            }
        };

        new Chart(ctx, config);
    </script>
}